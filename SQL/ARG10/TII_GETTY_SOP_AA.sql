USE [ARG10]
GO

/****** Object:  StoredProcedure [dbo].[TII_GETTY_SOP_AA]    Script Date: 07/10/2018 18:10:15 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TII_GETTY_SOP_AA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[TII_GETTY_SOP_AA]
GO

USE [ARG10]
GO

/****** Object:  StoredProcedure [dbo].[TII_GETTY_SOP_AA]    Script Date: 07/10/2018 18:10:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[TII_GETTY_SOP_AA]
--DECLARE 
@SOPTYPE smallint, @SOPNUMBE CHAR(21)
AS
--SELECT @SOPTYPE = 3
--SELECT @SOPNUMBE = 'FV A0001-00000197'
-- EXEC TII_GETTY_SOP_AA 3, 'FV A0001-00000481'

DECLARE @aaSubLedgerHdrID  int, @aaSubLedgerDistID int, @aaSubLedgerAssignID int
DECLARE @CMPANYID int, @SEQNUMBR int, @invoice_id int, @article_id int
DECLARE @address_country_code char(2), @ACTNUMST CHAR(20), @ACCTTYPE smallint, @ACTINDX INT, @price numeric(19,5)
DECLARE @CURNCYID CHAR(15), @CURRNIDX INT, @RATETPID CHAR(15), @EXGTBLID CHAR(15), @XCHGRATE NUMERIC(19,7), @XCHGRATE2 NUMERIC(19,7)
DECLARE @EXCHDATE DATETIME, @TIME1 DATETIME, @RTCLCMTD SMALLINT, @DENXRATE NUMERIC(19,7), @MCTRXSTT SMALLINT, @CUSTNMBR CHAR(15)
DECLARE @FUNLCURR CHAR(15), @DECPLCUR SMALLINT, @NOTEINDX NUMERIC(19,5)
DECLARE @COSTCENTER int, @PROJECT int, @INTERCOMPANY int
DECLARE @aaDataEntry1 int, @aaTrxDimCodeIDDflt1 int, @aaDataEntry2 int, @aaTrxDimCodeIDDflt2 int, @aaDataEntry3 int, @aaTrxDimCodeIDDflt3 int
DECLARE @COSTCENTERDIMID int, @PROJECTDIMID int, @INTERCOMPANYDIMID int, @aaCompanyStatus int
DECLARE @DOCAMNT numeric(19,5), @ORDOCAMT numeric(19,5)
DECLARE @DEBITAMT numeric(19,5), @ORDBTAMT numeric(19,5)
DECLARE @SALESDIST NUMERIC(19,5), @SALESDISTOR NUMERIC(19,5), @SALESDIST2 NUMERIC(19,5), @SALESDISTOR2 NUMERIC(19,5)
DECLARE @CRDTAMNT numeric(19,5), @ORCDTAMT numeric(19,5), @ACTNUMBR_1 CHAR(9) 

-- PRODUCTION
DECLARE @aaDataEntry4 int, @aaTrxDimCodeIDDflt4 int, @PRODUCTIONDIMID int, @PRODUCTION int, @INTEGRATIONID CHAR(15)

BEGIN TRANSACTION

SELECT @FUNLCURR = FUNLCURR FROM MC40000

SELECT @invoice_id = INTEGRATIONID FROM INT_SOPHDR WHERE SOPTYPE = @SOPTYPE AND SOPNUMBE = @SOPNUMBE
PRINT @invoice_id

SELECT @CMPANYID = CMPANYID FROM DYNAMICS..SY01500 WHERE INTERID = DB_NAME()

--SELECT @aaSubLedgerHdrID = aaRowID FROM DYNAMICS..AAG00102 WHERE CMPANYID = @CMPANYID AND aaTableID = 20000

SELECT @aaCompanyStatus = aaCompanyStatus FROM DYNAMICS..AAG00104 A INNER JOIN DYNAMICS..SY01500 B ON A.CMPANYID = B.CMPANYID WHERE INTERID = DB_NAME()

IF @aaCompanyStatus = 4
BEGIN
	SELECT @aaSubLedgerHdrID = aaSubLedgerHdrID FROM AAG20000 WHERE SERIES = 11 AND DOCTYPE = @SOPTYPE AND DOCNUMBR = @SOPNUMBE
	print @aaSubLedgerHdrID
END

/*		COMENTADO PARA QUE QUEDA EL ASIENTO STANDARD
DELETE SOP10102 WHERE SOPTYPE = @SOPTYPE AND SOPNUMBE = @SOPNUMBE AND DISTTYPE = 1

IF @aaCompanyStatus = 4
BEGIN
	DELETE AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID AND DISTTYPE = 1

	DELETE AAG20002 
	FROM AAG20002 A LEFT OUTER JOIN AAG20001 B 
	ON A.aaSubLedgerHdrID = B.aaSubLedgerHdrID AND A.aaSubLedgerDistID = B.aaSubLedgerDistID
	WHERE B.aaSubLedgerDistID IS NULL

	DELETE AAG20003 
	FROM AAG20003 A LEFT OUTER JOIN AAG20001 B 
	ON A.aaSubLedgerHdrID = B.aaSubLedgerHdrID AND A.aaSubLedgerDistID = B.aaSubLedgerDistID
	WHERE B.aaSubLedgerDistID IS NULL
END
*/

SELECT @CURNCYID = CURNCYID, @CURRNIDX = CURRNIDX, @RATETPID = RATETPID, @EXGTBLID = EXGTBLID, @XCHGRATE =XCHGRATE,
@EXCHDATE = EXCHDATE, @TIME1 = TIME1, @RTCLCMTD = RTCLCMTD, @DENXRATE = DENXRATE, @MCTRXSTT = MCTRXSTT, @CUSTNMBR = CUSTNMBR
FROM SOP10100 WHERE SOPTYPE = @SOPTYPE AND SOPNUMBE = @SOPNUMBE
PRINT @CURNCYID

SELECT @XCHGRATE2 = CASE WHEN @XCHGRATE = 0 THEN 1 ELSE @XCHGRATE END

SELECT @DECPLCUR = DECPLCUR - 1 FROM DYNAMICS..MC40200 WHERE CURNCYID = @CURNCYID

IF @aaCompanyStatus = 4
BEGIN
	SELECT @COSTCENTERDIMID = aaTrxDimID FROM AAG00400 WHERE aaOrder = 1
	print @COSTCENTERDIMID
	SELECT @PROJECTDIMID = aaTrxDimID FROM AAG00400 WHERE aaOrder = 2 AND INACTIVE = 0
	print @PROJECTDIMID
	SELECT @INTERCOMPANYDIMID = aaTrxDimID FROM AAG00400 WHERE aaOrder = 3
	print @INTERCOMPANYDIMID
	SELECT @COSTCENTER = ISNULL(aaTrxDimCodeID, 0) FROM AAG00401 WHERE aaTrxDimID = @COSTCENTERDIMID AND aaTrxDimCode = 'S000'
	PRINT @COSTCENTER
	SELECT @PROJECT = ISNULL(aaTrxDimCodeID, 0) FROM AAG00401 WHERE aaTrxDimID = @PROJECTDIMID AND aaTrxDimCode = '00'
	PRINT @PROJECT
	SELECT @INTERCOMPANY = ISNULL(aaTrxDimCodeID, 0) FROM AAG00401 WHERE aaTrxDimID = @INTERCOMPANYDIMID AND aaTrxDimCode = '000'
	PRINT @INTERCOMPANY
	UPDATE AAG20003 SET aaTrxCodeID = @COSTCENTER WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID and aaTrxDimID = @COSTCENTERDIMID

	UPDATE AAG20003 SET aaTrxCodeID = @PROJECT WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID and aaTrxDimID = @PROJECTDIMID and ISNULL(@PROJECT, 0) <> 0

	UPDATE AAG20003 SET aaTrxCodeID = @INTERCOMPANY WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID and aaTrxDimID = @INTERCOMPANYDIMID

	-- PRODUCTION
	SELECT @PRODUCTIONDIMID = aaTrxDimID FROM AAG00400 WHERE aaOrder = 4
	print @PRODUCTIONDIMID
	SELECT @PRODUCTION = ISNULL(aaTrxDimCodeID, 0) FROM AAG00401 WHERE aaTrxDimID = @PRODUCTIONDIMID AND aaTrxDimCode = 'NO APLICA'
	PRINT @PRODUCTION
--	UPDATE AAG20003 SET aaTrxCodeID = @PRODUCTION WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID and aaTrxDimID = @PRODUCTIONDIMID
END

/*
DECLARE LINEAS CURSOR FOR 
SELECT DISTINCT ACTNUMST, address_country_code 
FROM TII_GETTY_SOP_DISTRIBUTIONS
WHERE invoice_id = @invoice_id

OPEN LINEAS
FETCH NEXT FROM LINEAS INTO @ACTNUMST, @address_country_code

WHILE @@FETCH_STATUS = 0
BEGIN
	PRINT 'EMPIEZA'
	SELECT @SEQNUMBR = MAX(ISNULL(SEQNUMBR, 0)) FROM SOP10102 WHERE SOPTYPE = @SOPTYPE AND SOPNUMBE = @SOPNUMBE
	SELECT @SEQNUMBR = @SEQNUMBR + 16384

	DECLARE ASIENTO CURSOR FOR
		SELECT ACTINDX, SUM(price) price FROM TII_GETTY_SOP_DISTRIBUTIONS
		WHERE invoice_id = @invoice_id and ACTNUMST = @ACTNUMST AND address_country_code = @address_country_code
		GROUP BY ACTINDX 

		OPEN ASIENTO
		FETCH NEXT FROM ASIENTO INTO @ACTINDX, @price
		WHILE @@FETCH_STATUS = 0
		BEGIN
			PRINT 'PRECIO'
			PRINT @price

			INSERT INTO SOP10102
			(SOPTYPE, SOPNUMBE, SEQNUMBR, DISTTYPE, DistRef, ACTINDX, DEBITAMT, ORDBTAMT, CRDTAMNT, ORCRDAMT, CURRNIDX)
			SELECT
				@SOPTYPE, @SOPNUMBE, @SEQNUMBR, 1 DISTTYPE, CASE WHEN @ACTINDX = 0 THEN @ACTNUMST + ' ' + @address_country_code ELSE '' END DistRef,
				@ACTINDX, 
				CASE WHEN @SOPTYPE = 3 THEN 0 ELSE ROUND(@price*@XCHGRATE2, @DECPLCUR) END DEBITAMT,
				CASE WHEN @SOPTYPE = 3 THEN 0 ELSE @price END ORDBTAMT, 
				CASE WHEN @SOPTYPE = 3 THEN ROUND(@price*@XCHGRATE2, @DECPLCUR) ELSE 0 END CRDTAMNT,
				CASE WHEN @SOPTYPE = 3 THEN @price ELSE 0 END ORCDTAMT,
				@CURRNIDX

			IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END

			IF @aaCompanyStatus = 4
			BEGIN
				SELECT @aaSubLedgerDistID = ISNULL(MAX(aaSubLedgerDistID), 0) FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID
				SELECT @aaSubLedgerDistID = @aaSubLedgerDistID + 1

				INSERT INTO AAG20001
				(aaSubLedgerHdrID, aaSubLedgerDistID, INTERID, ACTINDX, DISTTYPE, ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT,
				ORDBTAMT, CRDTAMNT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, SEQNUMBR, 
				aaChangeDate, aaCopyStatus)
				SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, DB_NAME(), @ACTINDX, 1 DISTTYPE, 1 ACCTTYPE, 2 aaBrowseType, @DECPLCUR,
					CASE WHEN @SOPTYPE = 3 THEN 0 ELSE ROUND(@price*@XCHGRATE2, @DECPLCUR) END DEBITAMT,
					CASE WHEN @SOPTYPE = 3 THEN 0 ELSE @price END ORDBTAMT, 
					CASE WHEN @SOPTYPE = 3 THEN ROUND(@price*@XCHGRATE2, @DECPLCUR) ELSE 0 END CRDTAMNT,
					CASE WHEN @SOPTYPE = 3 THEN @price ELSE 0 END ORCDTAMT,
					@CURNCYID, @CURRNIDX, @RATETPID, @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1, @SEQNUMBR,
					aaChangeDate = CONVERT(CHAR(8), GETDATE(), 112), aaCopyStatus = 8

				IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END

				SELECT @NOTEINDX = NOTEINDX FROM DYNAMICS..SY01500 WHERE CMPANYID = @CMPANYID

				UPDATE DYNAMICS..SY01500 SET NOTEINDX = NOTEINDX + 1 WHERE CMPANYID = @CMPANYID

				SELECT @aaSubLedgerAssignID = 1

				INSERT INTO AAG20002
				(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, ORDBTAMT, CRDTAMNT, ORCRDAMT, 
				aaAssignedPercent, NOTEINDX)
				SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID,
					CASE WHEN @SOPTYPE = 3 THEN 0 ELSE ROUND(@price*@XCHGRATE2, @DECPLCUR) END DEBITAMT,
					CASE WHEN @SOPTYPE = 3 THEN 0 ELSE @price END ORDBTAMT, 
					CASE WHEN @SOPTYPE = 3 THEN ROUND(@price*@XCHGRATE2, @DECPLCUR) ELSE 0 END CRDTAMNT,
					CASE WHEN @SOPTYPE = 3 THEN @price ELSE 0 END ORCDTAMT, 10000 aaAssignedPercent, @NOTEINDX

				IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END

				SELECT @COSTCENTER = ISNULL(aaTrxDimCodeID, 0)
				FROM AAG00401 A INNER JOIN AAG00400 B ON A.aaTrxDimID = B.aaTrxDimID
				WHERE B.aaOrder = 1 AND aaTrxDimCode = '0000'

				SELECT @PROJECT = aaTrxDimCodeID
				FROM AAG00401 A INNER JOIN AAG00400 B ON A.aaTrxDimID = B.aaTrxDimID
				WHERE B.aaOrder = 2 AND aaTrxDimCode = @address_country_code

				if @PROJECT IS NULL
				BEGIN
					SELECT @PROJECT = ISNULL(aaTrxDimCodeID, 0)
					FROM AAG00401 A INNER JOIN AAG00400 B ON A.aaTrxDimID = B.aaTrxDimID
					WHERE B.aaOrder = 2 AND aaTrxDimCode = '99'
				END

				SELECT @INTERCOMPANY = ISNULL(aaTrxDimCodeID, 0)
				FROM AAG00401 A INNER JOIN AAG00400 B ON A.aaTrxDimID = B.aaTrxDimID
				WHERE B.aaOrder = 3 AND aaTrxDimCode = '000'

				-- PRODUCTION
				SELECT @PRODUCTION = ISNULL(aaTrxDimCodeID, 0)
				FROM INTDB2..ERP_Invoice A INNER JOIN 
				AAG00401 B ON SUBSTRING(memo, 1, 10) = B.aaTrxDimCode INNER JOIN
				AAG00400 C ON B.aaTrxDimID = C.aaTrxDimID
				WHERE A.invoice_id = CONVERT(int, @INTEGRATIONID)
				AND A.memo like 'GILA%'
				SELECT @PRODUCTION = ISNULL(@PRODUCTION, 0)

				PRINT 'VALORES'
				PRINT @ACTNUMST
				PRINT @COSTCENTERDIMID
				PRINT @PROJECTDIMID
				PRINT @INTERCOMPANYDIMID
				PRINT @COSTCENTER
				PRINT @PROJECT
				PRINT @INTERCOMPANY

				SELECT @aaDataEntry1 = A.aaDataEntry, @aaTrxDimCodeIDDflt1 = aaTrxDimCodeIDDflt 
					FROM AAG00202 A INNER JOIN AAG00201 B ON A.aaAcctClassID = B.aaAcctClassID
					INNER JOIN AAG00200 C ON B.aaAcctClassID = C.aaAcctClassID 
					INNER JOIN AAG00400 D ON D.aaTrxDimID = A.aaTrxDimID 
					WHERE C.ACTINDX = @ACTINDX AND D.aaOrder = 1

				SELECT @aaDataEntry2 = A.aaDataEntry, @aaTrxDimCodeIDDflt2 = aaTrxDimCodeIDDflt 
					FROM AAG00202 A INNER JOIN AAG00201 B ON A.aaAcctClassID = B.aaAcctClassID
					INNER JOIN AAG00200 C ON B.aaAcctClassID = C.aaAcctClassID 
					INNER JOIN AAG00400 D ON D.aaTrxDimID = A.aaTrxDimID 
					WHERE C.ACTINDX = @ACTINDX AND D.aaOrder = 2

				SELECT @aaDataEntry3 = A.aaDataEntry, @aaTrxDimCodeIDDflt3 = aaTrxDimCodeIDDflt 
					FROM AAG00202 A INNER JOIN AAG00201 B ON A.aaAcctClassID = B.aaAcctClassID
					INNER JOIN AAG00200 C ON B.aaAcctClassID = C.aaAcctClassID 
					INNER JOIN AAG00400 D ON D.aaTrxDimID = A.aaTrxDimID 
					WHERE C.ACTINDX = @ACTINDX AND D.aaOrder = 3

				-- PRODUCTION
				SELECT @aaDataEntry4 = A.aaDataEntry, @aaTrxDimCodeIDDflt4 = aaTrxDimCodeIDDflt 
					FROM AAG00202 A INNER JOIN AAG00201 B ON A.aaAcctClassID = B.aaAcctClassID
					INNER JOIN AAG00200 C ON B.aaAcctClassID = C.aaAcctClassID 
					INNER JOIN AAG00400 D ON D.aaTrxDimID = A.aaTrxDimID 
					WHERE C.ACTINDX = @ACTINDX AND D.aaOrder = 4

				IF ISNULL(@aaDataEntry1, 1) = 1
				BEGIN
					SELECT @COSTCENTER = 0
				END
				ELSE
				BEGIN
					IF @aaTrxDimCodeIDDflt1 <> 0
					BEGIN
						SELECT @COSTCENTER = @aaTrxDimCodeIDDflt1
					END
				END

				--IF @aaDataEntry2 = 1
				--BEGIN
					SELECT @PROJECT = 0
				--END

				IF isnull(@aaDataEntry3, 1) = 1
				BEGIN
					SELECT @INTERCOMPANY = 0
				END

				-- PRODUCTION
				IF isnull(@aaDataEntry4, 1) = 1
				BEGIN
					SELECT @PRODUCTION = 0
				END

				IF @aaDataEntry1 <> 1 
				BEGIN
					INSERT INTO AAG20003
					(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID)
					SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @COSTCENTERDIMID, @COSTCENTER

					PRINT '1'
					--SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @COSTCENTERDIMID, @COSTCENTER
					IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				END

				IF @aaDataEntry2 <> 1 
				BEGIN
					INSERT INTO AAG20003
					(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID)
					SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @PROJECTDIMID, @PROJECT

					PRINT '2'
					--SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @COSTCENTERDIMID, @PROJECT
					IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				END
				
				IF @aaDataEntry3 <> 1 
				BEGIN
					INSERT INTO AAG20003
					(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID)
					SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @INTERCOMPANYDIMID, @INTERCOMPANY

					PRINT '3'
					--SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @COSTCENTERDIMID, @INTERCOMPANY
					IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				END
				
				IF @aaDataEntry4 <> 1 
				BEGIN
					-- PRODUCTION
					INSERT INTO AAG20003
					(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID)
					SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @PRODUCTIONDIMID, @PRODUCTION

					PRINT '4'
					--SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @COSTCENTERDIMID, @INTERCOMPANY
					IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				END
			END

			FETCH NEXT FROM ASIENTO INTO @ACTINDX, @price
		END

		CLOSE ASIENTO

		DEALLOCATE ASIENTO

		
	FETCH NEXT FROM LINEAS INTO @ACTNUMST, @address_country_code
END

CLOSE LINEAS

DEALLOCATE LINEAS

SELECT TOP 1 @ACTNUMBR_1 = ACTNUMBR_1 FROM GL00100

SELECT @ACTNUMST = RTRIM(@ACTNUMBR_1) + '-000-67970'

SELECT @ACTINDX = ACTINDX FROM GL00105 WHERE ACTNUMST = @ACTNUMST

SELECT @SALESDIST2 = SUM(CRDTAMNT+DEBITAMT), @SALESDISTOR2 = SUM(ORCRDAMT+ORDBTAMT) FROM SOP10102 WHERE SOPTYPE = @SOPTYPE AND SOPNUMBE = @SOPNUMBE AND DISTTYPE = 1

IF @SALESDIST <> @SALESDIST2 
BEGIN
	SELECT @SEQNUMBR = MAX(SEQNUMBR) FROM SOP10102 WHERE SOPNUMBE = @SOPNUMBE
	
	SELECT @SEQNUMBR = ISNULL(@SEQNUMBR, 0)
	
	IF @SEQNUMBR <> 0
	BEGIN
		SELECT @SEQNUMBR = @SEQNUMBR + 16384
		
		IF @SALESDIST - @SALESDIST2 > 0
		BEGIN
			IF @SOPTYPE = 3 
			BEGIN
				SELECT @CRDTAMNT = @SALESDIST - @SALESDIST2
				SELECT @ORCDTAMT = @SALESDISTOR - @SALESDISTOR2
				SELECT @DEBITAMT = 0
				SELECT @ORDBTAMT = 0
			END
			ELSE
			BEGIN
				SELECT @DEBITAMT = @SALESDIST - @SALESDIST2
				SELECT @ORDBTAMT = @SALESDISTOR - @SALESDISTOR2
				SELECT @CRDTAMNT = 0
				SELECT @ORCDTAMT = 0
			END
		END	
		ELSE
		BEGIN
			IF @SOPTYPE = 3 
			BEGIN
				SELECT @DEBITAMT = ABS(@SALESDIST - @SALESDIST2)
				SELECT @ORDBTAMT = ABS(@SALESDISTOR - @SALESDISTOR2)
				SELECT @CRDTAMNT = 0
				SELECT @ORCDTAMT = 0
			END
			ELSE
			BEGIN
				SELECT @CRDTAMNT = ABS(@SALESDIST - @SALESDIST2)
				SELECT @ORCDTAMT = ABS(@SALESDISTOR - @SALESDISTOR2)
				SELECT @DEBITAMT = 0
				SELECT @ORDBTAMT = 0
			END
		END
		
		INSERT INTO SOP10102
			SELECT @SOPTYPE, @SOPNUMBE, @SEQNUMBR, 13 DISTTYPE, 'Dif. redondeo' DistRef, @ACTINDX,
				@DEBITAMT, @ORDBTAMT, @CRDTAMNT CRDTAMNT, @ORCDTAMT ORCRDAMT, @CURRNIDX, '' TRXSORCE, 0 POSTED

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
	
		SELECT @aaSubLedgerDistID = ISNULL(MAX(aaSubLedgerDistID), 0) FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID
		SELECT @aaSubLedgerDistID = @aaSubLedgerDistID + 1
		
		INSERT INTO AAG20001
		(aaSubLedgerHdrID, aaSubLedgerDistID, INTERID, ACTINDX, DISTTYPE, ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT,
		ORDBTAMT, CRDTAMNT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, SEQNUMBR, 
		aaChangeDate, aaCopyStatus)
		SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, DB_NAME(), @ACTINDX, 13 DISTTYPE, 1 ACCTTYPE, 2 aaBrowseType, @DECPLCUR,
			@DEBITAMT DEBITAMT,
			@ORDBTAMT ORDBTAMT, 
			@CRDTAMNT CRDTAMNT,
			@ORCDTAMT ORCDTAMT,
			@CURNCYID, @CURRNIDX, @RATETPID, @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1, @SEQNUMBR,
			aaChangeDate = CONVERT(CHAR(8), GETDATE(), 112), aaCopyStatus = 8

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END

		SELECT @NOTEINDX = NOTEINDX FROM DYNAMICS..SY01500 WHERE CMPANYID = @CMPANYID

		UPDATE DYNAMICS..SY01500 SET NOTEINDX = NOTEINDX + 1 WHERE CMPANYID = @CMPANYID

		SELECT @aaSubLedgerAssignID = 1

		INSERT INTO AAG20002
		(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, ORDBTAMT, CRDTAMNT, ORCRDAMT, 
		aaAssignedPercent, NOTEINDX)
		SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID,
			@DEBITAMT DEBITAMT,
			@ORDBTAMT ORDBTAMT, 
			@CRDTAMNT CRDTAMNT,
			@ORCDTAMT ORCDTAMT, 10000 aaAssignedPercent, @NOTEINDX

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				
		IF @aaDataEntry3 <> 1
		BEGIN
			INSERT INTO AAG20003
			(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID)
			SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @INTERCOMPANYDIMID, @INTERCOMPANY
		END
			
		
	END
END
*/

IF EXISTS(SELECT SOPNUMBE FROM SOP10103 WHERE SOPNUMBE = @SOPNUMBE)
BEGIN
	DELETE SOP10102 WHERE SOPNUMBE = @SOPNUMBE AND DISTTYPE = 13

	IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
	
	SELECT @SEQNUMBR = MAX(SEQNUMBR) FROM SOP10102 WHERE SOPNUMBE = @SOPNUMBE
	
	SELECT @SEQNUMBR = ISNULL(@SEQNUMBR, 0)
	
	IF @SEQNUMBR <> 0
	BEGIN
		SELECT @SEQNUMBR = @SEQNUMBR + 16384
		
		SELECT @ACTINDX = RMARACC FROM RM00101 WHERE CUSTNMBR = @CUSTNMBR
		
		SELECT @DOCAMNT = DOCAMNT, @ORDOCAMT = ORDOCAMT FROM SOP10100 WHERE SOPNUMBE = @SOPNUMBE AND SOPTYPE = @SOPTYPE
		
		INSERT INTO SOP10102
			SELECT @SOPTYPE, @SOPNUMBE, @SEQNUMBR, 13 DISTTYPE, 'Ds. x Vtas Factura' DistRef, @ACTINDX,
				@DOCAMNT, @ORDOCAMT, 0 CRDTAMNT, 0 ORCRDAMT, @CURRNIDX, '' TRXSORCE, 0 POSTED, 0 Contract_Exchange_Rate

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
	
		SELECT @aaSubLedgerDistID = ISNULL(MAX(aaSubLedgerDistID), 0) FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID
		SELECT @aaSubLedgerDistID = @aaSubLedgerDistID + 1
		
		INSERT INTO AAG20001
		(aaSubLedgerHdrID, aaSubLedgerDistID, INTERID, ACTINDX, DISTTYPE, ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT,
		ORDBTAMT, CRDTAMNT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, SEQNUMBR, 
		aaChangeDate, aaCopyStatus)
		SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, DB_NAME(), @ACTINDX, 13 DISTTYPE, 1 ACCTTYPE, 2 aaBrowseType, @DECPLCUR,
			@DOCAMNT DEBITAMT,
			@ORDOCAMT ORDBTAMT, 
			0 CRDTAMNT,
			0 ORCDTAMT,
			@CURNCYID, @CURRNIDX, @RATETPID, @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1, @SEQNUMBR,
			aaChangeDate = CONVERT(CHAR(8), GETDATE(), 112), aaCopyStatus = 8

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END

		SELECT @NOTEINDX = NOTEINDX FROM DYNAMICS..SY01500 WHERE INTERID = DB_NAME()

		UPDATE DYNAMICS..SY01500 SET NOTEINDX = NOTEINDX + 1 WHERE INTERID = DB_NAME()

		SELECT @aaSubLedgerAssignID = 1

		INSERT INTO AAG20002
		(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, ORDBTAMT, CRDTAMNT, ORCRDAMT, 
		aaAssignedPercent, NOTEINDX)
		SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID,
			@DOCAMNT DEBITAMT,
			@ORDOCAMT ORDBTAMT, 
			0 CRDTAMNT,
			0 ORCDTAMT, 10000 aaAssignedPercent, @NOTEINDX

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				
		SELECT @aaDataEntry3 = A.aaDataEntry 
			FROM AAG00202 A INNER JOIN AAG00201 B ON A.aaAcctClassID = B.aaAcctClassID
			INNER JOIN AAG00200 C ON B.aaAcctClassID = C.aaAcctClassID 
			INNER JOIN AAG00400 D ON D.aaTrxDimID = A.aaTrxDimID 
			WHERE C.ACTINDX = @ACTINDX AND D.aaOrder = 3

		IF ISNULL(@aaDataEntry3, 1) <> 1
		BEGIN
			INSERT INTO AAG20003
			(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID)
			SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @INTERCOMPANYDIMID, @INTERCOMPANY
		END

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				
		SELECT @SEQNUMBR = @SEQNUMBR + 16384 
		
		INSERT INTO SOP10102
			SELECT @SOPTYPE, @SOPNUMBE, @SEQNUMBR, 13 DISTTYPE, 'Ds. x Vtas Recibo' DistRef, @ACTINDX,
				0 DOCAMNT, 0 ORDOCAMT, @DOCAMNT, @ORDOCAMT, @CURRNIDX, '' TRXSORCE, 0 POSTED, 0 Contract_Exchange_Rate

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
	
		SELECT @aaSubLedgerDistID = ISNULL(MAX(aaSubLedgerDistID), 0) FROM AAG20001 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID
		SELECT @aaSubLedgerDistID = @aaSubLedgerDistID + 1
		
		INSERT INTO AAG20001
		(aaSubLedgerHdrID, aaSubLedgerDistID, INTERID, ACTINDX, DISTTYPE, ACCTTYPE, aaBrowseType, DECPLACS, DEBITAMT,
		ORDBTAMT, CRDTAMNT, ORCRDAMT, CURNCYID, CURRNIDX, RATETPID, EXGTBLID, XCHGRATE, EXCHDATE, TIME1, SEQNUMBR, 
		aaChangeDate, aaCopyStatus)
		SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, DB_NAME(), @ACTINDX, 13 DISTTYPE, 1 ACCTTYPE, 2 aaBrowseType, @DECPLCUR,
			0 DEBITAMT,
			0 ORDBTAMT, 
			@DOCAMNT CRDTAMNT,
			@ORDOCAMT ORCDTAMT,
			@CURNCYID, @CURRNIDX, @RATETPID, @EXGTBLID, @XCHGRATE, @EXCHDATE, @TIME1, @SEQNUMBR,
			aaChangeDate = CONVERT(CHAR(8), GETDATE(), 112), aaCopyStatus = 8

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END

		SELECT @NOTEINDX = NOTEINDX FROM DYNAMICS..SY01500 WHERE INTERID = DB_NAME()

		UPDATE DYNAMICS..SY01500 SET NOTEINDX = NOTEINDX + 1 WHERE INTERID = DB_NAME()

		SELECT @aaSubLedgerAssignID = 1

		INSERT INTO AAG20002
		(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, DEBITAMT, ORDBTAMT, CRDTAMNT, ORCRDAMT, 
		aaAssignedPercent, NOTEINDX)
		SELECT 	@aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID,
			0 DEBITAMT,
			0 ORDBTAMT, 
			@DOCAMNT CRDTAMNT,
			@ORDOCAMT ORCDTAMT, 10000 aaAssignedPercent, @NOTEINDX

		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				
		IF ISNULL(@aaDataEntry3, 1) <> 1
		BEGIN
			INSERT INTO AAG20003
			(aaSubLedgerHdrID, aaSubLedgerDistID, aaSubLedgerAssignID, aaTrxDimID, aaTrxCodeID)
			SELECT @aaSubLedgerHdrID, @aaSubLedgerDistID, @aaSubLedgerAssignID, @INTERCOMPANYDIMID, @INTERCOMPANY
		END
		
		IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
				
	END
	
	
END


IF @aaCompanyStatus = 4
BEGIN
	UPDATE AAG20001 SET aaCustID = @CUSTNMBR, aaWinWasOpen = 1 WHERE aaSubLedgerHdrID = @aaSubLedgerHdrID

	IF @@ERROR <> 0 BEGIN ROLLBACK RETURN END
END

COMMIT




GO


